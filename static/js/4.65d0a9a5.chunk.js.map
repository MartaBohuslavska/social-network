{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/SendMessage/SendMessage.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/SendMessage/SendMessage.jsx","components/Dialogs/SendMessage/SendMessageContainer.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","activeClassName","activeLink","src","alt","name","Message","block","message","maxLength30","maxLengthCreator","SendMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","input","placeholder","component","Textarea","validate","required","button","SendMessage","values","sendMessage","newMessage","SendMessageContainer","connect","state","newMessageText","messagesPage","dispatch","sendMessageActionCreator","Dialogs","dialogsElements","dialogs","map","key","messagesElements","messages","dialogsItems","mapStateToProps","isAuth","auth","compose","Component"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,WAAa,iC,oBCAnED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,wGCgBhFC,EAbI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC7C,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBJ,IAAQK,YAC1C,yBAAKC,IAAI,6GAA6GC,IAAI,KACzHX,EAAMY,Q,kBCAAC,EARC,SAACb,GACf,OACE,yBAAKG,UAAWC,IAAQU,OACtB,yBAAKX,UAAWC,IAAQW,SAAUf,EAAMe,W,mDCAxCC,EAAcC,YAAiB,IAqB/BC,EAAuBC,YAAU,CAAEC,KAAM,eAAlBD,EAnBL,SAACnB,GAEvB,OACE,0BAAMqB,SAAUrB,EAAMsB,aAAcnB,UAAWC,IAAQgB,MACrD,6BACE,kBAACG,EAAA,EAAD,CACEpB,UAAWC,IAAQoB,MACnBC,YAAa,wBACbb,KAAM,aACNc,UAAWC,IACXC,SAAU,CAACC,IAAUb,MAEzB,6BACE,4BAAQb,UAAWC,IAAQ0B,QAA3B,qBAuBOC,EAfK,SAAC/B,GAMnB,OACE,6BACE,6BACE,kBAACkB,EAAD,CAAsBG,SAPR,SAACW,GACnBhC,EAAMiC,YAAYD,EAAOE,kB,iBCSdC,EAFcC,aAdP,SAACC,GACrB,MAAO,CACLC,eAAgBD,EAAME,aAAaD,mBAId,SAACE,GACxB,MAAO,CACLP,YAAa,SAACC,GACZM,EAASC,YAAyBP,QAKXE,CAA8CL,GCd5DW,EAnBC,SAAC1C,GAEf,IAAIqC,EAAQrC,EAAMuC,aAEdI,EAAkBN,EAAMO,QAAQC,KAAI,SAAAxC,GAAM,OAAI,kBAAC,EAAD,CAAYO,KAAMP,EAAOO,KAAMV,GAAIG,EAAOH,GAAI4C,IAAKzC,EAAOH,QACxG6C,EAAmBV,EAAMW,SAASH,KAAI,SAAA9B,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAAS+B,IAAK/B,EAAQb,QAErG,OACE,yBAAKC,UAAWC,IAAQwC,SACtB,yBAAKzC,UAAWC,IAAQ6C,cACrBN,GAEH,yBAAKxC,UAAWC,IAAQ4C,UACrBD,EACD,kBAAC,EAAD,S,QChBJG,EAAkB,SAACb,GACnB,MAAO,CACHc,OAAQd,EAAMe,KAAKD,S,OCKZE,sBACbjB,aAPoB,SAACC,GACrB,MAAO,CACLE,aAAcF,EAAME,kBDGQ,SAACe,GAU7B,OAFiClB,YAAQc,EAARd,EANP,SAACpC,GAEvB,OAAIA,EAAMmD,OACH,kBAACG,EAActD,GADG,kBAAC,IAAD,CAAUO,GAAG,gBCH/B8C,CAGbX","file":"static/js/4.65d0a9a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Ph1Z\",\"dialogsItems\":\"Dialogs_dialogsItems__20HgU\",\"messages\":\"Dialogs_messages__1U1i9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1RyHh\",\"activeLink\":\"DialogItem_activeLink__oFdt5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__F6zGl\",\"block\":\"Message_block__2Lmmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SendMessage_form__2PTWX\",\"input\":\"SendMessage_input__1Zm_z\",\"button\":\"SendMessage_button__1sCxZ\"};","import React from 'react';\r\nimport classes from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={classes.dialog + ' ' + classes.active}>\r\n      <NavLink to={path} activeClassName={classes.activeLink}>\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRIrAS16c2tMDVB4D3Zl1UUneTPBm5aB4mLi6jwHzM88R6n7rHD\" alt=\"\" />\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.block}>\r\n      <div className={classes.message}>{props.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './SendMessage.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst SendMessageForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classes.form}>\r\n      <div>\r\n        <Field \r\n          className={classes.input} \r\n          placeholder={\"Write your message...\"} \r\n          name={\"newMessage\"} \r\n          component={Textarea}\r\n          validate={[required, maxLength30]} />\r\n      </div>\r\n      <div>\r\n        <button className={classes.button}>Send message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst SendMessageReduxForm = reduxForm({ form: 'sendMessage' })(SendMessageForm);\r\n\r\nconst SendMessage = (props) => {\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessage);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SendMessageReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SendMessage;","import React from 'react';\r\nimport SendMessage from './SendMessage';\r\nimport {sendMessageActionCreator} from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n// const SendMessageContainer = (props) => {\r\n  \r\n//   let state = props.store.getState().messagesPage;\r\n\r\n//   let sendMessage = () => {\r\n//     props.store.dispatch(sendMessageActionCreator());\r\n//   }\r\n\r\n//   let onChangeNewMessage = (text) => {\r\n//     props.store.dispatch(updateNewMessageActionCreator(text));\r\n//   }\r\n  \r\n//   return (\r\n//     <SendMessage \r\n//       sendMessage={sendMessage} \r\n//       updateNewMessage={onChangeNewMessage}\r\n//       newMessageText={state.newMessageText}/>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newMessageText: state.messagesPage.newMessageText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessage) => {\r\n      dispatch(sendMessageActionCreator(newMessage))\r\n    }\r\n  }\r\n}\r\n\r\nconst SendMessageContainer = connect(mapStateToProps, mapDispatchToProps) (SendMessage);\r\n\r\nexport default SendMessageContainer;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport SendMessageContainer from './SendMessage/SendMessageContainer';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.messagesPage;\r\n  \r\n  let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>);\r\n  let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id}/> );\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        {messagesElements}\r\n        <SendMessageContainer/>\r\n      </div>  \r\n    </div>)\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n\r\n        if(!props.isAuth) return <Redirect to='/login'/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    \r\n    return ConnectedRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}